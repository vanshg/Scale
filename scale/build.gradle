apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group = 'com.vanshgandhi.scale'
def libVersion = '1.0.0'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"
    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 24
        versionCode 1
        versionName "$libVersion"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        buildTypes.each {
            it.buildConfigField 'String', 'SCALE_API_KEY', scale_api_key
        }
    }
}

configurations {
    javadocDeps
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    javadocDeps 'com.android.support:support-annotations:24.2.1'
    compile 'com.android.support:support-annotations:24.2.1'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
}

def siteUrl = 'http://van.sh'
def projectName = 'com.vanshgandi.scale'
def gitUrl = 'https://github.com/vanshg/Scale'

bintray {
    user = 'vanshg'
    key = bintray_api_key
    configurations = ['archives']
    pkg {
        repo = 'maven'
        version libVersion
        name = projectName
        desc = 'Android SDK for the Scale API'
        licenses = ['Apache 2.0']
        labels = ['android', 'scale', 'sdk']
        vcsUrl = gitUrl
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            name projectName
            url siteUrl
            licenses {
                license {
                    name 'Apache 2.0 License'
                    url 'https://github.com/vanshg/Scale/blob/master/LICENSE'
                }
            }
            developers {
                developer {
                    id 'vanshg'
                    name 'Vansh Gandhi'
                    email 'vansh.gandhi@gmail.com'
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl

            }
        }.writeTo("$buildDir/pom.xml")
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += configurations.javadocDeps
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}